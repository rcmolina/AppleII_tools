.list
.code
;Enable 40 column mode
 STA $C051
 STA $C00C
 STA  $C054

;Clear screen text
PAGEA = $06
 LDA #$00
 STA PAGEA
 LDA #$04
 STA PAGEA+1

 LDA #$20
 ORA #%10000000
 LDY #0
CLR1: STA (PAGEA),Y
 INY
 BNE CLR1
 INC PAGEA+1
 LDX PAGEA+1
 CPX #8
 BNE CLR1

;init random number to zero
 LDA #0
 STA SEED
 STA SEED+1
 STA SEED+2
 STA SEED+3
 JSR SHOWSEED

;Start read key loop
KEYIN: JSR NEXTRAND
 LDA $C000
 BPL KEYIN
 STA $C010
 AND  #%01111111
 CMP  #$0D
 BNE  KEYIN
 JSR SHOWSEED
 JMP KEYIN

TEMP: .byte $00,$00,$00,$00

;Calculate next random
NEXTRAND: LDA #1
 LDX #3
RAND1: STA TEMP,X
 LSR
 DEX
 BPL RAND1
 LDY #$20
 BNE RAND5
RAND2: BCC RAND4
 CLC
 LDX #3
RAND3: LDA TEMP,X
 ADC RAND6,X
 STA TEMP,X
 DEX
 BPL RAND3
RAND4: ROR TEMP
 ROR TEMP+1
 ROR TEMP+2
 ROR TEMP+3
RAND5: ROR SEED
 ROR SEED+1
 ROR SEED+2
 ROR SEED+3
 DEY
 BPL RAND2
 RTS
RAND6: .byte $00,$19,$66,$0D

SCREEN = $0400
;Print current random in upper left
SHOWSEED: LDA SEED+2
 JSR GETCHR
 LDA OUTTXT
 STA SCREEN
 LDA OUTTXT+1
 STA SCREEN+1

 LDA SEED+1
 JSR GETCHR
 LDA OUTTXT
 STA SCREEN+2
 LDA OUTTXT+1
 STA SCREEN+3
 RTS

;Convert A reg into hex text @CHR var
OUTTXT: .byte $00,$00
GETCHR: STA OUTTXT
 LDA #0
 STA OUTTXT+1
 LDX #4

CHR1: CLC
 ROR OUTTXT
 ROL OUTTXT+1
 DEX
 BNE CHR1

 LDX OUTTXT
 LDA CHRTBL,X
 ORA #%10000000
 STA OUTTXT
 LDX OUTTXT+1
 LDA CHRTBL,X
 ORA #%10000000
 STA OUTTXT+1

 RTS
CHRTBL: .byte $30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$41,$42,$43,$44,$45,$46

SEED: .byte $11,$22,$33,$44

; 80 Column row map
HI: .byte $04,$04,$05,$05,$06,$06,$07,$07
.byte $04,$04,$05,$05,$06,$06,$07,$07
.byte $04,$04,$05,$05,$06,$06,$07,$07

LO: .byte $00,$80,$00,$80,$00,$80,$00,$80
.byte $28,$A8,$28,$A8,$28,$A8,$28,$A8
.byte $50,$D0,$50,$D0,$50,$D0,$50,$D0